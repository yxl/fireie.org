<?php

/**
 * @file
 * QQ acount login drupal by OAuth
 * @author hejinlong
 * @mail   jinlonghe@yahoo.cn
 * @site   www.drupaluser.org
 * @date   11-27-2011
 */
/**
 * Implements hook_help().
 */
function qq_help($path, $arg) {
  global $user;
  switch ($path) {
    case 'admin/help#qq':
      $output = '<h3>' . t('About') . '</h3><dd>' . t('The qq module allows qq acount to log in drupal') . '</dd><dd>' . t('The <a href="@oauth">Oauth settings page</a> allows you to manage settings for your application APP ID, KEY and CALLBACK.', array('@oauth'  => url('admin/config/people/qq'))) . '</dd>';
      return $output;
    case 'admin/config/people/qq':
      $output = '<h3>' . t('Oauth settings') . '</h3><dd>' . t('You can apply the QQ Login application by connect.qq.com/intro/login. View more api document,please click <a href="http://wiki.open.qq.com">Tencent Open Platform</a>') . '</dd>';
      return $output;
  }
}
/**
 * Implements hook_permission().
 */
function qq_permission() {
  return array(
    'access qq api' => array(
      'title' => t('Access QQ login api'),
      'description' => t('Access QQ login api'),
    ),
    'administer qq login configuration' => array(
      'title' => t('Administer QQ login configuration'),
      'description' => t('Administer QQ login configuration'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function qq_menu() {
   $items['qq/login'] = array(
        'title' => t('QQ Login'),
        'page callback' => 'qq_login',
        'access arguments' => array('access qq api'),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'qq_oauth.inc',
   );
   $items['qq/reg'] = array(
        'title' => t('QQ Register'),
        'page callback' => 'qq_reg',
        'access arguments' => array('access qq api'),
        'type' => MENU_NORMAL_ITEM,
   );
   $items['admin/config/people/qq'] = array(
        'title' => t('QQ login configuration'),
        'description' => t('QQ login configuration'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('qq_admin_settings'),
        'access callback' => 'user_access',
        'access arguments' => array('administer qq login configuration'),
        'type' => MENU_NORMAL_ITEM,
   );
   return $items;
}
/**
 * QQ settings
 */
function qq_admin_settings() {
   $form['meta'] = array(
        '#type' => 'textfield',
        '#title' => t('meta verification content'),
        '#description' => t('Please input verification meta content of your application '),
        '#default_value' => variable_get('meta', '25271227125156727'),
    );
   $form['key'] = array(
        '#type' => 'textfield',
        '#title' => t('oauth consumer key'),
        '#description' => t('Please input APP ID of your application'),
        '#default_value' => variable_get('key', ''),
    );
   $form['secret'] = array(
    '#type' => 'textfield',
        '#title' => t('oauth consumer secret'),
        '#description' => t('Please input KEY of your application'),
        '#default_value' => variable_get('secret', ''),
    );
   $form['callback'] = array(
        '#type' => 'textfield',
        '#title' => t('oauth callback'),
        '#description' => t('Please input CALLBACK of your application'),
        '#default_value' => variable_get('callback', ''),
    );
    return system_settings_form($form);
}
/**
 * QQ acount login drupal
 */
function qq_login() {
    $qq = new QqOauth();
    $token = $qq->oauthrequesttoken();
    $_SESSION['oauth_token_secret'] = $token['oauth_token_secret'];
    $qq->authorize($token['oauth_token']);
}

/**
 * Form builder; the qq form.
 */
function qq_form($form, &$form_state) {
     $form['name'] = array(
        '#type' => 'textfield',
        '#title' => t('Username'),
        '#required' => TRUE,
        '#attributes' => array('class' => array('username')),
     );
     $form['mail'] = array(
        '#type' => 'textfield',
        '#title' => t('E-mail address'),
        '#required' => TRUE,
     );
     $form['pass'] = array(
        '#type' => 'password_confirm',
        '#size' => 25,
        '#required' => TRUE,
     );
     $form['actions'] = array('#type' => 'actions');
     $form['actions']['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
        '#validate' => array('qq_form_validate'),
        '#submit' => array('qq_form_submit'),
     );
     return $form;
}
/**
 * Form validation handler for qq_form().
 * @see qq_form()
 */
function qq_form_validate($form, &$form_state) {
  global $user;
  if (isset($form_state['values']['name'])) {
    if ($error = user_validate_name($form_state['values']['name'])) {
      form_set_error('name', $error);
    }
    elseif ($user->name != $form_state['values']['name']) {
      if ((bool) db_select('users')->fields('users', array('uid'))->condition('uid', $user->uid, '<>')->condition('name', db_like($form_state['values']['name']), 'LIKE')->range(0, 1)->execute()->fetchField()) {
         form_set_error('name', t('The name %name is already taken.', array('%name' => $form_state['values']['name'])));
      }
    }
  }

    $mail = trim($form_state['values']['mail']);
    form_set_value($form['mail'], $mail, $form_state);

  if ($error = user_validate_mail($form_state['values']['mail'])) {
    form_set_error('mail', $error);
  }
  elseif ((bool) db_select('users')->fields('users', array('uid'))->condition('uid', $user->uid, '<>')->condition('mail', db_like($form_state['values']['mail']), 'LIKE')->range(0, 1)->execute()->fetchField()) {
      form_set_error('mail', t('The e-mail address %email is already registered. <a href="@password">Have you forgotten your password?</a>', array('%email' => $form_state['values']['mail'], '@password' => url('user/password'))));
  }
}
/**
 * Save qq form datas
 */
function qq_form_submit($form, &$form_state) {
    global $user;
    $user = user_load_by_name($form_state['values']['name']);
    $arr = array(
                'name' => $form_state['values']['name'],
                'pass' => $form_state['values']['pass'],
                'mail' => $form_state['values']['mail'],
                'init' => $form_state['values']['mail'],
                'access' => time(),
                'login' => time(),
           );
    user_save($user, $arr);
    drupal_set_message(t('Success!'));
    drupal_goto('user/' . $user->uid);
}
/**
 * QQ acount register into drupal
 */
function qq_reg() {
  global $user;
  if (!$user->uid) {
    $qq_name = 'qq' . time();
    $newuser = array(
       'name' => $qq_name,
       'pass' => '',
       'mail' => '',
       'status' => 1,
       'init' => ''
    );
    user_save(NULL, $newuser);
    $user = user_load_by_name($qq_name);
  }
  $output = drupal_render(drupal_get_form('qq_form'));
  drupal_add_js('misc/jquery.js');
  drupal_add_js('jQuery(document).ready(function () {$("#edit-name").val("' . $user->name . '");});', 'inline');
  return $output;
}
/**
 * Alter user login form
 */
function qq_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_login_block' || $form_id == 'user_login') {
      $items[] = '<a href="qq/login" title="' . t('QQ acount log in drupal') . '"><img src="' . drupal_get_path('module', 'qq') . '/images/Connect_logo.png"></a>';
      $form['url'] = array('#markup' => theme('item_list', array('items' => $items)));
  }
}

/**
 * Adds meta info to page header.
 * Implements hoo_page_alter().
 * @author Yuan Xulei
 */
function qq_page_alter($page) {
  // QQ login meta
  $meta_qqlogin = array(
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => array(
    'property' => 'qc:admins',
    'content' => variable_get('meta', '25271227125156727'),
  ));

  drupal_add_html_head($meta_qqlogin , 'meta_qqlogin');
}

